name: magento-test-framework
on: [push, pull_request]
jobs:
  functional:
    runs-on: ubuntu-latest
    container:
      image: openmage/php-dev:7.3-apache
      ports:
        - 80:80
      options: --network-alias=testserver

    env:
      TEST_HOSTNAME: testserver
      SELENIUM_HOST: http://selenium:4444/wd/hub

    services:
      mysql:
        image: bitnami/mysql:8.0.31
        env:
          ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: openmage
          MYSQL_PASSWORD: openmage
          MYSQL_DATABASE: openmage
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306/tcp
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
      selenium:
        image: selenium/standalone-chrome
        # options: --health-cmd "curl http://selenium:4444" --health-interval=5s
        ports:
          - 4444:4444

    steps:
      - name: Checkout OpenMage repo
        uses: actions/checkout@v3

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: imagick, gd, mbstring, pdo_mysql, soap, xsl, zip, intl

      - name: Install OpenMage dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Verify MySQL connection
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"localhost" -P"$PORT" --silent; do
            sleep 1
          done          

      - name: Install Magento
        run: |
          php -f install.php -- \
            --license_agreement_accepted yes \
            --locale en_US --timezone "America/Los_Angeles" --default_currency USD \
            --db_host mysql --db_name openmage --db_user openmage --db_pass openmage \
            --url "http://${TEST_HOSTNAME}/" --use_rewrites yes --use_secure no \
            --secure_base_url "http://${TEST_HOSTNAME}/" --use_secure_admin no \
            --admin_lastname Owner --admin_firstname Store --admin_email "admin@example.com" \
            --admin_username admin --admin_password 123123q123123q \
            --encryption_key "I2V7t7fiCIRKw9FWz4m3CStgeBG1T+ATZ0Us+W8jAIk="

      - name: Check if site is accessible
        run: |
          curl http://$TEST_HOSTNAME
          
      - name: Install PHPUnit Dependencies
        working-directory: ./dev/tests/functional
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Start selenoid
        uses: ajinx/zalenium@1.1

      - name: Setup and check MTF
        working-directory: ./dev/tests/functional
        run: |
          cp ./phpunit.xml.dist ./phpunit.xml
          sed -e "s?localhost?${TEST_HOSTNAME}?g" --in-place ./phpunit.xml
          sed -e "s?basic?travis_acceptance?g" --in-place ./phpunit.xml
          php -f utils/generate.php
          cd ./utils
          php -f mtf troubleshooting:check-all

      - name: Run PHPUnit
        working-directory: ./dev/tests/functional
        run: vendor/phpunit/phpunit/phpunit

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.40
        if: always()
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: output/*.xml
